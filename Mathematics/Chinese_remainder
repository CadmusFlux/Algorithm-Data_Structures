Theory : 

Code : 

      # Import Gcd formula
      
      m = [7,13,59,31,19]                         # Modulus Values
      a = [0,1,4,6,7]                             # Remainder Values
      
      import numpy as np
      
      # Calculating product of modulus and dividing the sum by each m values
      
      M_sum = np.prod(m)
      M_i =  [int(M_sum/h) for h in m]
      mo = []
      
      # Calculating Multiplicative Inverse
      
      
      for i in range(len(m)):
        p1 = M_i[i]%m[i]
        for j in range(m[i]):
            if (p1*j)%m[i] == 1:
                mo.append(j)
      
      # Chinese remainder theorem using values from M_i , remainder , Multiplicative inverse
      
      
      sumi = 0
      for i in range(len(m)):
          print(M_i[i],mo[i],a[i],M_i[i]*mo[i]*a[i])
          sumi += M_i[i]*mo[i]*a[i]
      print(sumi % M_sum)
      
      
